<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>人生第一次</title>
    <url>/2022/10/27/my-frist-blog/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="今天是我写博客的第一天"><a href="#今天是我写博客的第一天" class="headerlink" title="今天是我写博客的第一天"></a>今天是我写博客的第一天</h1><h2 id="不知道写点什么好"><a href="#不知道写点什么好" class="headerlink" title="不知道写点什么好"></a>不知道写点什么好</h2><h3 id="下午骑电车送弟弟上学时，下雨了，我未雨绸缪拿上了伞，但是还是变成了落汤鸡"><a href="#下午骑电车送弟弟上学时，下雨了，我未雨绸缪拿上了伞，但是还是变成了落汤鸡" class="headerlink" title="下午骑电车送弟弟上学时，下雨了，我未雨绸缪拿上了伞，但是还是变成了落汤鸡!"></a>下午骑电车送弟弟上学时，下雨了，我未雨绸缪拿上了伞，但是还是变成了落汤鸡!</h3>]]></content>
      <categories>
        <category>水果</category>
        <category>苹果</category>
      </categories>
      <tags>
        <tag>生活经历</tag>
      </tags>
  </entry>
  <entry>
    <title>六国论</title>
    <url>/2022/07/13/test2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="六国论"><a href="#六国论" class="headerlink" title="六国论"></a>六国论</h1><h2 id="苏洵-〔宋代〕"><a href="#苏洵-〔宋代〕" class="headerlink" title="苏洵 〔宋代〕"></a>苏洵 〔宋代〕</h2><p>　  六国破灭，非兵不利，战不善，弊在赂秦。赂秦而力亏，破灭之道也。或曰：六国互丧，率赂秦耶？曰：不赂者以赂者丧，盖失强援，不能独完。故曰：弊在赂秦也。</p>
<p>　　秦以攻取之外，小则获邑，大则得城。较秦之所得，与战胜而得者，其实百倍；诸侯之所亡，与战败而亡者，其实亦百倍。则秦之所大欲，诸侯之所大患，固不在战矣。思厥先祖父，暴霜露，斩荆棘，以有尺寸之地。子孙视之不甚惜，举以予人，如弃草芥。今日割五城，明日割十城，然后得一夕安寝。起视四境，而秦兵又至矣。然则诸侯之地有限，暴秦之欲无厌，奉之弥繁，侵之愈急。故不战而强弱胜负已判矣。至于颠覆，理固宜然。古人云：“以地事秦，犹抱薪救火，薪不尽，火不灭。”此言得之。</p>
<p>　　齐人未尝赂秦，终继五国迁灭，何哉？与嬴而不助五国也。五国既丧，齐亦不免矣。燕赵之君，始有远略，能守其土，义不赂秦。是故燕虽小国而后亡，斯用兵之效也。至丹以荆卿为计，始速祸焉。赵尝五战于秦，二败而三胜。后秦击赵者再，李牧连却之。洎牧以谗诛，邯郸为郡，惜其用武而不终也。且燕赵处秦革灭殆尽之际，可谓智力孤危，战败而亡，诚不得已。向使三国各爱其地，齐人勿附于秦，刺客不行，良将犹在，则胜负之数，存亡之理，当与秦相较，或未易量。</p>
<p>　　呜呼！以赂秦之地封天下之谋臣，以事秦之心礼天下之奇才，并力西向，则吾恐秦人食之不得下咽也。悲夫！有如此之势，而为秦人积威之所劫，日削月割，以趋于亡。为国者无使为积威之所劫哉！</p>
<p>　　夫六国与秦皆诸侯，其势弱于秦，而犹有可以不赂而胜之之势。苟以天下之大，下而从六国破亡之故事，是又在六国下矣。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>文言文</category>
      </categories>
      <tags>
        <tag>文言文</tag>
      </tags>
  </entry>
  <entry>
    <title>新工院·美景</title>
    <url>/2022/11/22/%E6%A0%A1%E5%9B%AD%E7%BE%8E%E6%99%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="2022-11-17"><a href="#2022-11-17" class="headerlink" title="2022.11.17"></a>2022.11.17</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/f6d3419761644491.jpeg"></p>
<h2 id="2022-11-17-1"><a href="#2022-11-17-1" class="headerlink" title="2022.11.17"></a>2022.11.17</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/054f3ddc2d0ac090.jpeg"></p>
<h2 id="2022-11-17-2"><a href="#2022-11-17-2" class="headerlink" title="2022.11.17"></a>2022.11.17</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/3a6f4d0c441251b4.jpeg"></p>
<h2 id="2022-11-15"><a href="#2022-11-15" class="headerlink" title="2022.11.15"></a>2022.11.15</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/04383fc376a431b4.jpeg"></p>
<h2 id="2022-11-15-1"><a href="#2022-11-15-1" class="headerlink" title="2022.11.15"></a>2022.11.15</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/67139809dfe18854.jpeg"></p>
<h2 id="2022-11-14"><a href="#2022-11-14" class="headerlink" title="2022.11.14"></a>2022.11.14</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/839e420daa39abd2.jpeg"></p>
<h2 id="2022-11-13"><a href="#2022-11-13" class="headerlink" title="2022.11.13"></a>2022.11.13</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/da82ceb3158094dc.jpeg"></p>
<h2 id="2022-11-13-1"><a href="#2022-11-13-1" class="headerlink" title="2022.11.13"></a>2022.11.13</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/ea304202ca5eaa40.jpeg"></p>
<h2 id="2022-11-12"><a href="#2022-11-12" class="headerlink" title="2022.11.12"></a>2022.11.12</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/eb73a320c378e2a6.jpeg"></p>
<h2 id="2022-11-12-1"><a href="#2022-11-12-1" class="headerlink" title="2022.11.12"></a>2022.11.12</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/a66d4534811976c6.jpeg"></p>
<h2 id="2022-11-02"><a href="#2022-11-02" class="headerlink" title="2022.11.02"></a>2022.11.02</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/930a985aa079a912.jpeg"></p>
<h2 id="2022-10-28"><a href="#2022-10-28" class="headerlink" title="2022.10.28"></a>2022.10.28</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/416bbded87290ff0.jpeg"></p>
<h2 id="2022-09-08"><a href="#2022-09-08" class="headerlink" title="2022.09.08"></a>2022.09.08</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/d7f052da2a9c1261.jpeg"></p>
<h2 id="2022-10-14"><a href="#2022-10-14" class="headerlink" title="2022.10.14"></a>2022.10.14</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/7bd45c8b2a31ad9c.jpeg"></p>
]]></content>
      <categories>
        <category>校园生活</category>
        <category>景色</category>
      </categories>
      <tags>
        <tag>校园</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯单片机常用模块之一:ds18b20模块</title>
    <url>/2023/01/02/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97(%E4%B8%80)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="ds18b20模块"><a href="#ds18b20模块" class="headerlink" title="ds18b20模块"></a>ds18b20模块</h1><h2 id="一-学习前要"><a href="#一-学习前要" class="headerlink" title="一 学习前要"></a>一 学习前要</h2><h3 id="须掌握的知识有"><a href="#须掌握的知识有" class="headerlink" title="须掌握的知识有:"></a>须掌握的知识有:</h3><ul>
<li><input checked="" disabled="" type="checkbox"> 程序模块化的应用</li>
<li><input checked="" disabled="" type="checkbox"> 数码管显示的应用</li>
<li><input checked="" disabled="" type="checkbox"> 定时器的应用</li>
</ul>
<h2 id="二-ds18b20模块的原理"><a href="#二-ds18b20模块的原理" class="headerlink" title="二 ds18b20模块的原理"></a>二 ds18b20模块的原理</h2><h3 id="1-ds18b20的介绍"><a href="#1-ds18b20的介绍" class="headerlink" title="1 ds18b20的介绍"></a>1 ds18b20的介绍</h3><p>DS18B20是美国DALLAS半导体公司继DS1820之后最新推出的一种改进型智能温度传感器。与传统的热敏电阻相比，他能够直接读出被测温度并且可根据实际要求通过简单的编程实现9～12位的数字值读数方式。可以分别在93.75 ms和750 ms内完成9位和12位的数字量，并且从DS18B20读出的信息或写入DS18B20的信息仅需要一根口线（单线接口）读写，温度变换功率来源于数据总线，总线本身也可以向所挂接的DS18B20供电，而无需额外电源。因而使用DS18B20可使系统结构更趋简单，可靠性更高。他在测温精度、转换时间、传输距离、分辨率等方面较DS1820有了很大的改进，给用户带来了更方便的使用和更令人满意的效果。</p>
<h3 id="2-DS18B20的主要特性"><a href="#2-DS18B20的主要特性" class="headerlink" title="2 DS18B20的主要特性"></a>2 DS18B20的主要特性</h3><p>1）适应电压范围3.0V～5.5V，在寄生电源方式下可由数据线供电。</p>
<p>　　2）DS18B20与微处理器之间仅需要—条口线即可双向通讯。</p>
<p>　　3）支持多点组网功能，多个DS18B20可以并联在唯—的三线上，实现组网多点测温。</p>
<p>　　4）不需要任何外围元件，全部传感元件及转换电路集成在外形如一只三极管的电路内。</p>
<p>　　5）测温范围－55℃～＋125℃，在－10℃～＋85℃时精度为±0.5℃。</p>
<p>　　6）可编程的分辨率为9位～12位，对应的可分辨温度分别为0.5℃、0.25℃、0.125℃和0.0625℃，可实现高精度测温。</p>
<p>　　7）在9位分辨率时，最多93.75ms便可把温度转换为数字，12位分辨率时最多750ms便可把温度值转换为数字。</p>
<p>　　8）直接输出数字温度信号，以一线总线串行传送给CPU，同时可传送CRC校验码，具有极强的抗干扰纠错能力。</p>
<p>　　9）电源极性接反时，芯片不会因发热而烧毁，但不能正常工作。</p>
<p>　　DS18B20遵循单总线协议，每次测温时必须有初始化、传送ROM命令、传送RAM命令、数据交换等4个过程。</p>
<h4 id="工作原理就不在此赘述-详情点击下面链接"><a href="#工作原理就不在此赘述-详情点击下面链接" class="headerlink" title="工作原理就不在此赘述,详情点击下面链接:"></a><strong>工作原理就不在此赘述,详情点击下面链接:</strong></h4><p><a href="https://blog.csdn.net/yuantuo3887/article/details/81293933">ds18b20工作原理和测温原理介绍(CSDN)</a></p>
<h3 id="3-DS18B20模块程序的编写"><a href="#3-DS18B20模块程序的编写" class="headerlink" title="3 DS18B20模块程序的编写"></a>3 DS18B20模块程序的编写</h3><p>温度的数据是以<strong>16位数据</strong>储存在芯片中,高8位的<strong>前5位</strong>是<em>符号位</em>,<strong>1为负,0为正</strong>;<strong>低8位</strong>的<strong>后4位</strong>是<em>小数位</em>,<strong>中间</strong>的是<em>整数部分</em>.所以我们需要定义变量来保存数据</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">u8 low,high;<span class="comment">//定义低8位和高8位</span></span><br></pre></td></tr></table></figure>
<p>考虑到小数点后的数据不好处理,单独定义一个函数外的全局变量,方便进行数码管显示</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> u8 temp_dot;<span class="comment">//定义小数位</span></span><br></pre></td></tr></table></figure>
<p>去掉前四个符号位,和最后四个小数部分,得到只含有一位符号位的整数部分:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">u8 temp;</span><br></pre></td></tr></table></figure>
<p>变量定义完毕,按照单总线协议(onewire)进行温度的测量:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">init_ds18b20();		<span class="comment">//	  初始化</span></span><br><span class="line">Write_DS18B20(<span class="number">0xcc</span>);  <span class="comment">//   关rom</span></span><br><span class="line">Write_DS18B20(<span class="number">0x44</span>);	<span class="comment">// 开始转换温度</span></span><br><span class="line">Delay_OneWire(<span class="number">200</span>);		 </span><br><span class="line"></span><br><span class="line">init_ds18b20();				<span class="comment">// 初始化</span></span><br><span class="line">Write_DS18B20(<span class="number">0xcc</span>);		  <span class="comment">// 关rom</span></span><br><span class="line">Write_DS18B20(<span class="number">0xbe</span>);			<span class="comment">// 读暂存器</span></span><br><span class="line">Delay_OneWire(<span class="number">200</span>);</span><br></pre></td></tr></table></figure>
<p>测量完毕,进行温度数据的读取:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">low = Read_DS18B20();			<span class="comment">//读取低8位:高四位整数低4位 低四位 小数部分</span></span><br><span class="line">high = Read_DS18B20();			<span class="comment">//读取高8位:高五位符号位判断正负  第三位 整数高三位</span></span><br><span class="line">temp_dot = low &amp; <span class="number">0x0f</span>;			<span class="comment">//摘除小数部分</span></span><br><span class="line">low &gt;&gt;= <span class="number">4</span>;					    <span class="comment">//去掉小数部分</span></span><br><span class="line">high &lt;&lt;= <span class="number">4</span>;				        <span class="comment">//去掉前四个符号位</span></span><br><span class="line">temp = 	(low | high);           <span class="comment">//得到只含有一位符号位的整数部分</span></span><br><span class="line"><span class="keyword">if</span>((temp &amp; <span class="number">0x80</span>) == <span class="number">0x80</span>)       <span class="comment">//temp为负</span></span><br><span class="line">&#123;</span><br><span class="line">	temp = ~(temp<span class="number">-1</span>);</span><br><span class="line">	temp_dot = ~(temp_dot<span class="number">-1</span>)*<span class="number">0.625</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>					  <span class="comment">//temp为正</span></span><br><span class="line">&#123;</span><br><span class="line">	temp = temp;</span><br><span class="line">	temp_dot = temp_dot*<span class="number">0.625</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br></pre></td></tr></table></figure>
<h4 id="关于-0-625-这个数是怎么来的"><a href="#关于-0-625-这个数是怎么来的" class="headerlink" title="关于 0.625 这个数是怎么来的"></a><strong>关于 0.625 这个数是怎么来的</strong></h4><p>从DS18B20读取的二进制必须先转换成十进制，才能用于字符的现实，DS18B20的转换精度为9~12位可选，默认采用12位转换精度，温度寄存器里的值是以0.062为步进的，即温度值为温度寄存器里的二进制值乘以0.0625，就是实际的十进制温度值。12位的最低位为权为1&#x2F;16，即0.0625</p>
<table>
<thead>
<tr>
<th>保留小数点位数</th>
<th>值</th>
</tr>
</thead>
<tbody><tr>
<td>保留1位</td>
<td>0.625</td>
</tr>
<tr>
<td>保留2位</td>
<td>6.25</td>
</tr>
</tbody></table>
<h4 id="比赛只用到这两个数-0-625-和-6-25"><a href="#比赛只用到这两个数-0-625-和-6-25" class="headerlink" title="比赛只用到这两个数 0.625 和 6.25"></a>比赛只用到这两个数 0.625 和 6.25</h4><p>实际上不是进制转换，而是测量值到实际温度的转换，DS18B20的精度为0.0625度，即读回数据的最低位代表0.0625度，实际测量值t×0.0625就转换为实际温度值。 比如 读回的数据为： 0000 0001 1001 0000，十六进制为0x190，十进制400，乘以0.0625后得25，即实际温度是25度。</p>
<h2 id="三-主要代码"><a href="#三-主要代码" class="headerlink" title="三 主要代码"></a>三 主要代码</h2><h3 id="onewire-h"><a href="#onewire-h" class="headerlink" title="onewire.h"></a>onewire.h</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __ONEWIRE_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __ONEWIRE_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned int</span></span><br><span class="line">	</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">rd_temperature</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<h3 id="onewire-c"><a href="#onewire-c" class="headerlink" title="onewire.c"></a>onewire.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  程序说明: 单总线驱动程序</span></span><br><span class="line"><span class="comment">  软件环境: Keil uVision 4.10 </span></span><br><span class="line"><span class="comment">  硬件环境: CT107单片机综合实训平台(外部晶振12MHz) STC89C52RC单片机</span></span><br><span class="line"><span class="comment">  日    期: 2011-8-9</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;onewire.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit DQ = P1^<span class="number">4</span>;  <span class="comment">//单总线接口</span></span><br><span class="line"><span class="keyword">extern</span> u8 temp_dot;</span><br><span class="line">	</span><br><span class="line"><span class="comment">//单总线延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_OneWire</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>  <span class="comment">//STC89C52RC</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 i;</span><br><span class="line">	<span class="keyword">while</span>(t--)<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">12</span>; i++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过单总线向DS18B20写一个字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_DS18B20</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		DQ = <span class="number">0</span>;</span><br><span class="line">		DQ = dat&amp;<span class="number">0x01</span>;</span><br><span class="line">		Delay_OneWire(<span class="number">5</span>);</span><br><span class="line">		DQ = <span class="number">1</span>;</span><br><span class="line">		dat &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Delay_OneWire(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从DS18B20读取一个字节</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">Read_DS18B20</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> dat;</span><br><span class="line">  </span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		DQ = <span class="number">0</span>;</span><br><span class="line">		dat &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">		DQ = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(DQ)</span><br><span class="line">		&#123;</span><br><span class="line">			dat |= <span class="number">0x80</span>;</span><br><span class="line">		&#125;	    </span><br><span class="line">		Delay_OneWire(<span class="number">5</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DS18B20设备初始化</span></span><br><span class="line">bit <span class="title function_">init_ds18b20</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  	bit initflag = <span class="number">0</span>;</span><br><span class="line">  	</span><br><span class="line">  	DQ = <span class="number">1</span>;</span><br><span class="line">  	Delay_OneWire(<span class="number">12</span>);</span><br><span class="line">  	DQ = <span class="number">0</span>;</span><br><span class="line">  	Delay_OneWire(<span class="number">80</span>);</span><br><span class="line">  	DQ = <span class="number">1</span>;</span><br><span class="line">  	Delay_OneWire(<span class="number">10</span>); </span><br><span class="line">    initflag = DQ;     </span><br><span class="line">  	Delay_OneWire(<span class="number">5</span>);</span><br><span class="line">  </span><br><span class="line">  	<span class="keyword">return</span> initflag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//===============================//</span></span><br><span class="line"><span class="comment">//此分界线上面的比赛资源包里都有,比赛时只用写下面一个函数即可</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">rd_temperature</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 low,high,temp;	 <span class="comment">//定义低8位，高8位，</span></span><br><span class="line">	init_ds18b20();		<span class="comment">//	  初始化</span></span><br><span class="line">	Write_DS18B20(<span class="number">0xcc</span>);  <span class="comment">//   关rom</span></span><br><span class="line">	Write_DS18B20(<span class="number">0x44</span>);	<span class="comment">// 开始转换温度</span></span><br><span class="line">	Delay_OneWire(<span class="number">200</span>);		 </span><br><span class="line"></span><br><span class="line">	init_ds18b20();				<span class="comment">// 初始化</span></span><br><span class="line">	Write_DS18B20(<span class="number">0xcc</span>);		  <span class="comment">// 关rom</span></span><br><span class="line">	Write_DS18B20(<span class="number">0xbe</span>);			<span class="comment">// 读暂存器</span></span><br><span class="line">	Delay_OneWire(<span class="number">200</span>);				</span><br><span class="line">  </span><br><span class="line">	low = Read_DS18B20();				<span class="comment">//	  低8位 高四位整数低4位 低四位 小数部分</span></span><br><span class="line">	high = Read_DS18B20();			<span class="comment">//	高8位 高五位符号位判断正负  第三位 整数高三位</span></span><br><span class="line">	temp_dot = low &amp; <span class="number">0x0f</span>;			 <span class="comment">//	摘除小数部分</span></span><br><span class="line">	low &gt;&gt;= <span class="number">4</span>;					   <span class="comment">//去掉小数部分</span></span><br><span class="line">	high &lt;&lt;= <span class="number">4</span>;					   <span class="comment">//去掉前四个符号位</span></span><br><span class="line">	temp = 	(low | high);</span><br><span class="line">	<span class="keyword">if</span>((temp &amp; <span class="number">0x80</span>) == <span class="number">0x80</span>) <span class="comment">//temp为负</span></span><br><span class="line">	&#123;</span><br><span class="line">		temp = ~(temp<span class="number">-1</span>);</span><br><span class="line">		temp_dot = ~(temp_dot<span class="number">-1</span>)*<span class="number">0.625</span>; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>					  <span class="comment">//temp为正</span></span><br><span class="line">	&#123;</span><br><span class="line">		temp = temp;</span><br><span class="line">		temp_dot = temp_dot*<span class="number">0.625</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;onewire.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;intrins.h&quot;</span></span></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned int</span></span><br><span class="line"></span><br><span class="line">u8 table_du[] = &#123;<span class="number">0xc0</span>,<span class="number">0xf9</span>,<span class="number">0xa4</span>,<span class="number">0xb0</span>,<span class="number">0x99</span>,<span class="number">0x92</span>,<span class="number">0x82</span>,<span class="number">0xf8</span>,<span class="number">0x80</span>,<span class="number">0x90</span>,<span class="number">0xff</span>&#125;;<span class="comment">//共阳数码管0-9显示</span></span><br><span class="line">u8 table_we[] = &#123;<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x01</span>&#125;;	            	<span class="comment">//位选端</span></span><br><span class="line">u8 temperature_table[<span class="number">8</span>];</span><br><span class="line">u8 set_table[<span class="number">8</span>];</span><br><span class="line">u8 temperature,temp_count;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> u8 temp_dot = <span class="number">0</span>;</span><br><span class="line">bit temp_flag;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay100ms</span><span class="params">()</span>		<span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> i, j, k;</span><br><span class="line"></span><br><span class="line">	_nop_();</span><br><span class="line">	_nop_();</span><br><span class="line">	i = <span class="number">5</span>;</span><br><span class="line">	j = <span class="number">144</span>;</span><br><span class="line">	k = <span class="number">71</span>;</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">do</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">while</span> (--k);</span><br><span class="line">		&#125; <span class="keyword">while</span> (--j);</span><br><span class="line">	&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">static</span> u8 i;	  <span class="comment">//设为静态变量下次调用值不变</span></span><br><span class="line">	P2 = ((P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>);P0 = <span class="number">0xff</span>;P2 &amp;= <span class="number">0x1f</span>;		  <span class="comment">//消隐</span></span><br><span class="line">	P2 = ((P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>);P0 = table_we[i];P2 &amp;= <span class="number">0x1f</span>;	<span class="comment">//先位选</span></span><br><span class="line">	P2 = ((P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>);P0 = temperature_table[i];P2 &amp;= <span class="number">0x1f</span>;</span><br><span class="line">	i++;</span><br><span class="line">	<span class="keyword">if</span>(i &gt;= <span class="number">8</span>)i = <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Init</span><span class="params">(<span class="type">void</span>)</span>		 <span class="comment">//2毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">	AUXR |= <span class="number">0x80</span>;		<span class="comment">//定时器时钟1T模式</span></span><br><span class="line">	TMOD &amp;= <span class="number">0xF0</span>;		<span class="comment">//设置定时器模式</span></span><br><span class="line">	TL0 = <span class="number">0x40</span>;		<span class="comment">//设置定时初始值</span></span><br><span class="line">	TH0 = <span class="number">0xA2</span>;		<span class="comment">//设置定时初始值</span></span><br><span class="line">	TF0 = <span class="number">0</span>;		<span class="comment">//清除TF0标志</span></span><br><span class="line">	TR0 = <span class="number">1</span>;		<span class="comment">//定时器0开始计时	</span></span><br><span class="line">	ET0 = <span class="number">1</span>;</span><br><span class="line">	EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">timer0_isr</span><span class="params">()</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">	temp_count++;</span><br><span class="line">	<span class="keyword">if</span>(temp_count &gt;= <span class="number">250</span>)&#123;temp_count = <span class="number">0</span>;temp_flag = <span class="number">1</span>;&#125;   <span class="comment">//温度的半秒计时</span></span><br><span class="line">	display();	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">table_convert</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	temperature_table[<span class="number">0</span>] = table_du[temp_dot %<span class="number">10</span>];</span><br><span class="line">	temperature_table[<span class="number">1</span>] = table_du[temperature % <span class="number">10</span>]&amp;<span class="number">0x7f</span>;</span><br><span class="line">	temperature_table[<span class="number">2</span>] = table_du[temperature / <span class="number">10</span>];	</span><br><span class="line">	temperature_table[<span class="number">3</span>] = <span class="number">0xff</span>;</span><br><span class="line">	temperature_table[<span class="number">4</span>] = <span class="number">0xff</span>;	</span><br><span class="line">	temperature_table[<span class="number">5</span>] = <span class="number">0xff</span>;</span><br><span class="line">	temperature_table[<span class="number">6</span>] = <span class="number">0xff</span>;	</span><br><span class="line">	temperature_table[<span class="number">7</span>] = <span class="number">0xff</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 x;</span><br><span class="line">	P2 = ((P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xa0</span>);P0 = <span class="number">0x00</span>;P2 &amp;= <span class="number">0x1f</span>;		<span class="comment">//关闭蜂鸣器继电器等</span></span><br><span class="line">	P2 = ((P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x80</span>);P0 = <span class="number">0xff</span>;P2 &amp;= <span class="number">0x1f</span>;		<span class="comment">//LED全灭</span></span><br><span class="line">	<span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; <span class="number">10</span>;x++)&#123;temperature = rd_temperature();Delay100ms();&#125;	</span><br><span class="line">	 <span class="comment">/*上电先多读几次过滤掉初值85，根据手册需要一个90多ms的延迟这边直接延迟100ms*/</span></span><br><span class="line">		Timer0Init();</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		table_convert();</span><br><span class="line">		<span class="keyword">if</span>(temp_flag)			   <span class="comment">//每半秒获取一次温度</span></span><br><span class="line">		&#123;</span><br><span class="line">			temp_flag = <span class="number">0</span>;</span><br><span class="line">			temperature = rd_temperature();	</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯单片机常用模块之二:按键模块(一)</title>
    <url>/2023/01/04/%E6%8C%89%E9%94%AE%E6%A8%A1%E5%9D%97(%E4%B8%80)%E7%8B%AC%E7%AB%8B%E6%8C%89%E9%94%AE%E4%B9%8B%E4%B8%89%E8%A1%8C%E6%8C%89%E9%94%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="按键模块-一-独立按键之三行按键"><a href="#按键模块-一-独立按键之三行按键" class="headerlink" title="按键模块(一):独立按键之三行按键"></a>按键模块(一):独立按键之三行按键</h1><h2 id="1-按键模块的正常写法"><a href="#1-按键模块的正常写法" class="headerlink" title="1 按键模块的正常写法"></a>1 按键模块的正常写法</h2><p>下面放上我学校单片机课上,老师教的<del>学院派</del>写法:</p>
<p>该程序只是实现按键控制LED亮灭,可以看出当按键数量太多时,程序看着很不方便,而且每次都要延时消抖.</p>
<p>因为蓝桥杯比赛中往往不会只用到单一的模块,比赛的程序一般都要用到<strong>4-5个模块</strong>.用正常的按键写法,每次消抖时程序是不执行任何的其他函数的,<strong>不能满足</strong>我们的需要,所以我们就要学会另一种简单,方便,好用的按键写法:<font color=red><strong>三行按键</strong> </font>. </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//=========================================//</span></span><br><span class="line"><span class="comment">/*School:新乡工程学院</span></span><br><span class="line"><span class="comment"> *Institute:机电工程学院</span></span><br><span class="line"><span class="comment"> *Class:电气204</span></span><br><span class="line"><span class="comment"> *Name:刘佳波</span></span><br><span class="line"><span class="comment"> *Student ID:2020190407</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//=========================================//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg51.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//位定义</span></span><br><span class="line">sbit LED1 = P0^<span class="number">0</span>;</span><br><span class="line">sbit LED2 = P0^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P0^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P0^<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">sbit K1 = P2^<span class="number">0</span>;</span><br><span class="line">sbit K2 = P2^<span class="number">1</span>;</span><br><span class="line">sbit K3 = P2^<span class="number">2</span>;</span><br><span class="line">sbit K4 = P2^<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(u16 x)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span>(x--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	P0 = <span class="number">0x00</span>;  <span class="comment">//led全灭</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)<span class="comment">//死循环</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(K1 == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			delay(<span class="number">300</span>);		 <span class="comment">//消抖函数</span></span><br><span class="line">			<span class="keyword">if</span>(K1 == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				LED1 = ~LED1;		 <span class="comment">//第一次按下亮，再按灭</span></span><br><span class="line">				<span class="keyword">while</span>(K1 == <span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">		<span class="keyword">if</span>(K2 == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			delay(<span class="number">300</span>);		 <span class="comment">//消抖函数</span></span><br><span class="line">			<span class="keyword">if</span>(K2 == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				LED2 = ~LED2;		 <span class="comment">//第一次按下亮，再按灭</span></span><br><span class="line">				<span class="keyword">while</span>(K2 == <span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;	</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(K3 == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			delay(<span class="number">300</span>);		 <span class="comment">//消抖函数</span></span><br><span class="line">			<span class="keyword">if</span>(K3 == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				LED3 = ~LED3;		 <span class="comment">//第一次按下亮，再按灭</span></span><br><span class="line">				<span class="keyword">while</span>(K3 == <span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;	</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(K4 == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			delay(<span class="number">300</span>);		 <span class="comment">//消抖函数</span></span><br><span class="line">			<span class="keyword">if</span>(K4 == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				LED4 = ~LED4;		 <span class="comment">//第一次按下亮，再按灭</span></span><br><span class="line">				<span class="keyword">while</span>(K4 == <span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;			</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="2-三行按键"><a href="#2-三行按键" class="headerlink" title="2 三行按键"></a>2 三行按键</h2><h3 id="2-1-什么是三行按键"><a href="#2-1-什么是三行按键" class="headerlink" title="2.1 什么是三行按键?"></a>2.1 什么是三行按键?</h3><p>通俗的说就是用下面的代码实现对按键的扫描,以此来判断按键是否按下,因其核心代码只有三行而得名.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">uchar cont,trg;    <span class="comment">//triger触发(短按) continue连续(长按)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">KeyScan</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	    uchar ReadData =  PINB ^ <span class="number">0xff</span>;</span><br><span class="line">		trg = ReadData &amp; (ReadData ^ cont);</span><br><span class="line">		cont = ReadData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-为什么我们要用三行按键"><a href="#2-2-为什么我们要用三行按键" class="headerlink" title="2.2 为什么我们要用三行按键?"></a>2.2 为什么我们要用三行按键?</h3><p>三行按键完美解决了延时消抖的问题，而且代码简洁方便，实用性很高，因为三行按键相当于是检测按键的状态来判断按键是否有按下，所以我们可以不用中断来写按键.</p>
<h3 id="2-3三行按键的原理"><a href="#2-3三行按键的原理" class="headerlink" title="2.3三行按键的原理"></a>2.3三行按键的原理</h3><p>（1） 没有按键的时候<br>端口为0xff，ReadData读端口并且异或，很显然，就是 0x00 了。<br>Trg &#x3D; ReadData &amp; (ReadData ^ Cont); （初始状态下，Cont也是为0的）很简单的数学计算，因为ReadData为0，则它和任何数“相与”，结果也是为0的。<br>Cont &#x3D; ReadData; 保存Cont 其实就是等于ReadData，为0；<br>结果就是：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ReadData ＝ <span class="number">0</span>；</span><br><span class="line">Trg ＝ <span class="number">0</span>；</span><br><span class="line">Cont ＝ <span class="number">0</span>；</span><br></pre></td></tr></table></figure>

<p>（2） 第一次PB0按下的情况<br>端口数据为0xfe，ReadData读端口并且异或，很显然，就是 0x01 了。<br>Trg &#x3D; ReadData &amp; (ReadData ^ Cont); 因为这是第一次按下，所以Cont是上次的值，应为为0。那么这个式子的值也不难算，也就是 Trg &#x3D; 0x01 &amp; (0x01^0x00) &#x3D; 0x01<br>Cont &#x3D; ReadData &#x3D; 0x01；<br>结果就是：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ReadData ＝ <span class="number">0x01</span>；</span><br><span class="line">Trg ＝ <span class="number">0x01</span>；             <span class="comment">//Trg只会在这个时候对应位的值为1，其它时候都为0</span></span><br><span class="line">Cont ＝ <span class="number">0x01</span>；</span><br></pre></td></tr></table></figure>

<p>（3） PB0按着不松（长按键）的情况<br>端口数据为0xfe，ReadData读端口并且异或是 0x01 了。<br>Trg &#x3D; ReadData &amp; (ReadData ^ Cont); 因为这是连续按下，所以Cont是上次的值，应为为0x01。那么这个式子就变成了 Trg &#x3D; 0x01 &amp; (0x01^0x01) &#x3D; 0x00<br>Cont &#x3D; ReadData &#x3D; 0x01；<br>结果就是：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ReadData ＝ <span class="number">0x01</span>；</span><br><span class="line">Trg ＝ <span class="number">0x00</span>；</span><br><span class="line">Cont ＝ <span class="number">0x01</span>；</span><br></pre></td></tr></table></figure>

<p>因为现在按键是长按着，所以MCU会每个一定时间（20ms左右）不断的执行这个函数，那么下次执行的时候情况会是怎么样的呢？<br>ReadData ＝ 0x01；这个不会变，因为按键没有松开<br>Trg ＝ ReadData &amp; (ReadData ^ Cont) ＝ 0x01 &amp; (0x01 ^ 0x01) &#x3D; 0 ，只要按键没有松开，这个Trg值永远为 0 ！！！<br>Cont ＝ 0x01；只要按键没有松开，这个值永远是0x01！！<br>（4） 按键松开的情况<br>端口数据为0xff，ReadData读端口并且异或是 0x00 了。<br>Trg &#x3D; ReadData &amp; (ReadData ^ Cont) &#x3D; 0x00 &amp; (0x00^0x01) &#x3D; 0x00<br>Cont &#x3D; ReadData &#x3D; 0x00；<br>结果就是：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ReadData ＝ <span class="number">0x00</span>；</span><br><span class="line">Trg ＝ <span class="number">0x00</span>；</span><br><span class="line">Cont ＝ <span class="number">0x00</span>；</span><br></pre></td></tr></table></figure>

<p>很显然，这个回到了初始状态，也就是没有按键按下的状态。</p>
<h2 id="3-三行按键代码"><a href="#3-三行按键代码" class="headerlink" title="3 三行按键代码"></a>3 三行按键代码</h2><p>这个代码是我<strong>最初学习</strong>的版本,现在看了一眼,可能有点<strong>小问题</strong>,但是三行按键的框架是对的.</p>
<p>按键处理函数<code>if&#123;&#125;</code>里的内容可能要改改,</p>
<p>没有进行消抖,要把主函数循环里的<code>scanKeys_Alone();</code>放到定时器里最少来一个10ms的定时消抖</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned int</span></span><br><span class="line"></span><br><span class="line">u8 trg,cont; <span class="comment">//triger触发  continue连续按下</span></span><br><span class="line"><span class="type">static</span> u8 k;</span><br><span class="line"></span><br><span class="line">sbit L1 = P0^<span class="number">0</span>;</span><br><span class="line">sbit L2 = P0^<span class="number">1</span>;</span><br><span class="line">sbit L3 = P0^<span class="number">2</span>;</span><br><span class="line">sbit L4 = P0^<span class="number">3</span>;</span><br><span class="line">sbit L5 = P0^<span class="number">4</span>;</span><br><span class="line">sbit L6 = P0^<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">selectHC573</span><span class="params">(u8 channel)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">switch</span>(channel)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">			P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x80</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">			P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xa0</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">			P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">			P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay100ms</span><span class="params">()</span>	 <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;	 u8 i ,	j;</span><br><span class="line">	 i = <span class="number">180</span>;</span><br><span class="line">	 j = <span class="number">73</span>;</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">while</span>(--j);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(--i);</span><br><span class="line">	   k++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">scanfkey</span><span class="params">()</span>	  <span class="comment">//按键扫描</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 ReadData = P3^<span class="number">0xff</span>;</span><br><span class="line">	trg = ReadData&amp;(ReadData^cont);</span><br><span class="line">	cont = ReadData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">scanKeys_Alone</span><span class="params">()</span>  <span class="comment">//按键处理函数</span></span><br><span class="line">&#123;</span><br><span class="line">    scanfkey();</span><br><span class="line">	<span class="keyword">if</span>(trg &amp; <span class="number">0x01</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	 	P1 = ~ <span class="number">0x01</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(trg &amp; <span class="number">0x02</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	 	P1 = ~ <span class="number">0x02</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(trg &amp; <span class="number">0x04</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	 	P1 = ~ <span class="number">0x04</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(cont &amp; <span class="number">0x01</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	   Delay100ms();</span><br><span class="line">	   <span class="keyword">if</span>(k == <span class="number">20</span>)<span class="comment">//长按键</span></span><br><span class="line">	   &#123;</span><br><span class="line">	   		P1 = <span class="number">0xff</span>;</span><br><span class="line">			k = <span class="number">0</span>;</span><br><span class="line">	   &#125;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;		</span><br><span class="line">	 	scanKeys_Alone();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考文献链接:</p>
<p><a href="https://blog.csdn.net/FuckerGod/article/details/90300098"> 三行代码搞定独立按键_天地神仙的博客-CSDN博客_独立按键三行代码</a></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯单片机常用模块之三:按键模块(二)</title>
    <url>/2023/01/21/%E6%8C%89%E9%94%AE%E6%A8%A1%E5%9D%97(%E4%BA%8C)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="按键模块-一-矩阵按键之三行按键"><a href="#按键模块-一-矩阵按键之三行按键" class="headerlink" title="按键模块(一):矩阵按键之三行按键"></a>按键模块(一):矩阵按键之三行按键</h1><p><strong>根据三行按键独立按键的写法进行扩展我们可以得到矩阵按键”三行按键”的写法:</strong></p>
<p><strong>key.h</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _KEY_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _KEY_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sfr P4 = <span class="number">0xc0</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned int</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> setkbd(x) P4 = ((x &amp; 0x80) &gt;&gt; 3) | ((x &amp; 0x40) &gt;&gt; 4);P3 = x</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> getkbd ((P4 &amp; 0x10) &lt;&lt;3) | ((P4 &amp; 0x04) &lt;&lt; 4) | (P3 &amp; 0x3f)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">scan_key</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">read_key</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p><strong>key.c</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> u8 table_du[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">extern</span> u8 in_table[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">extern</span> u8 key_value;</span><br><span class="line">u8 trg,cont;</span><br><span class="line"><span class="type">void</span> <span class="title function_">scan_key</span><span class="params">()</span>			 <span class="comment">//setkbd和getkbd宏定义放在了 iic头文件里了	主要是输入和检测功能</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 readdata;</span><br><span class="line">	setkbd(<span class="number">0xf0</span>);</span><br><span class="line">	readdata = getkbd;</span><br><span class="line">	setkbd(<span class="number">0x0f</span>);</span><br><span class="line">	readdata = (readdata | getkbd) ^ <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">	trg = readdata &amp; (readdata ^ cont);</span><br><span class="line">	cont = readdata;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">read_key</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	scan_key();</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x81</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">7</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x82</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">6</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x84</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">5</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x88</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">4</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x41</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">11</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x42</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">10</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x44</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">9</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x48</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">8</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x21</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">15</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x22</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">14</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x24</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">13</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x28</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">12</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x11</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">19</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x12</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">18</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x14</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">17</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(trg == <span class="number">0x18</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_value = <span class="number">16</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>main.c</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>;</span><br><span class="line"></span><br><span class="line">u8 count;</span><br><span class="line">bit key_flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">extern</span> u8 key_value = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">extern</span> u8 table_du[] = &#123;<span class="number">0xc0</span>,<span class="number">0xf9</span>,<span class="number">0xa4</span>,<span class="number">0xb0</span>,<span class="number">0x99</span>,<span class="number">0x92</span>,<span class="number">0x82</span>,<span class="number">0xf8</span>,<span class="number">0x80</span>,<span class="number">0x90</span>&#125;;<span class="comment">//共阳数码管0-9的码值</span></span><br><span class="line">u8 table_we[] = &#123;<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x01</span>&#125;;	<span class="comment">//从右往左位选端</span></span><br><span class="line">u8 keytable[] = &#123;<span class="number">0xc0</span>,<span class="number">0xc0</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Init</span><span class="params">(u8 n,u8 value)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">switch</span>(n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x80</span>;P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">5</span>:P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xa0</span>;P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">6</span>:P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>;P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">7</span>:P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>;P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	Init(<span class="number">5</span>,<span class="number">0x00</span>);</span><br><span class="line">	Init(<span class="number">4</span>,<span class="number">0xff</span>);</span><br><span class="line">	Timer0Init();</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(key_flag)	<span class="comment">//按键扫描</span></span><br><span class="line">		&#123;</span><br><span class="line">			key_flag = <span class="number">0</span>;</span><br><span class="line">			read_key();</span><br><span class="line">		&#125;</span><br><span class="line">		keytable[<span class="number">0</span>] = table_du[key_value % <span class="number">10</span>];</span><br><span class="line">	   	keytable[<span class="number">1</span>] = table_du[key_value / <span class="number">10</span> % <span class="number">10</span>];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">static</span> u8 n;</span><br><span class="line">	Init(<span class="number">7</span>,<span class="number">0xff</span>);</span><br><span class="line">	Init(<span class="number">7</span>,keytable[n]);</span><br><span class="line">	Init(<span class="number">6</span>,table_we[n]); </span><br><span class="line">	n++;</span><br><span class="line">	<span class="keyword">if</span>(n &gt;= <span class="number">8</span>)n = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">timer0_isr</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">	count++;</span><br><span class="line">	<span class="keyword">if</span>(count &gt; <span class="number">6</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		count = <span class="number">0</span>;</span><br><span class="line">		key_flag = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	display();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Init</span><span class="params">(<span class="type">void</span>)</span>		<span class="comment">//2毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">	AUXR |= <span class="number">0x80</span>;		<span class="comment">//定时器时钟1T模式</span></span><br><span class="line">	TMOD &amp;= <span class="number">0xF0</span>;		<span class="comment">//设置定时器模式</span></span><br><span class="line">	TL0 = <span class="number">0x40</span>;		<span class="comment">//设置定时初值</span></span><br><span class="line">	TH0 = <span class="number">0xA2</span>;		<span class="comment">//设置定时初值</span></span><br><span class="line">	TF0 = <span class="number">0</span>;		<span class="comment">//清除TF0标志</span></span><br><span class="line">	TR0 = <span class="number">1</span>;		<span class="comment">//定时器0开始计时</span></span><br><span class="line">	ET0 = <span class="number">1</span>;</span><br><span class="line">	EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其中大部分代码,我们可以通过前段时间的学习看明白.</p>
<p>主要为大家介绍<code>key.h</code>的两句核心代码和<code>scan_key()</code>函数</p>
<h3 id="1-key-h"><a href="#1-key-h" class="headerlink" title="1 key.h"></a>1 key.h</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sfr P4 = 0xc0;</span><br></pre></td></tr></table></figure>

<p>因为我们用的是51头文件,里面没有P4,所以我们要按照P4的地址进行定义</p>
<p><strong>最新版的板子原理图矩阵用到了 P4^2 和 P4^4 口,没有P4的,不是最新版的原理图,望周知.</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> setkbd(x) P4 = ((x &amp; 0x80) &gt;&gt; 3) | ((x &amp; 0x40) &gt;&gt; 4);P3 = x</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> getkbd ((P4 &amp; 0x10) &lt;&lt; 3) | ((P4 &amp; 0x04) &lt;&lt; 4) | (P3 &amp; 0x3f)</span></span><br></pre></td></tr></table></figure>

<p>第一句:setkbd——设置键值</p>
<p>例一:处理高四位</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">P3 = <span class="number">0xf0</span>;  </span><br><span class="line">((x &amp; <span class="number">0x80</span>) &gt;&gt; <span class="number">3</span>): <span class="number">1111</span> <span class="number">0000</span> &amp; <span class="number">1000</span> <span class="number">0000</span> &gt;&gt;= <span class="number">0001</span> <span class="number">0000</span> </span><br><span class="line">((x &amp; <span class="number">0x40</span>) &gt;&gt; <span class="number">4</span>): <span class="number">1111</span> <span class="number">0000</span> &amp; <span class="number">0100</span> <span class="number">0000</span> &gt;&gt;= <span class="number">0000</span> <span class="number">0100</span></span><br><span class="line">|: 				   <span class="number">0001</span> <span class="number">0000</span> | <span class="number">0000</span> <span class="number">0100</span> ==  <span class="number">0001</span> <span class="number">0100</span></span><br><span class="line">P4 = <span class="number">0x14</span>;</span><br></pre></td></tr></table></figure>

<p>例二:处理低四位</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">P3 = <span class="number">0x0f</span>;  </span><br><span class="line">((x &amp; <span class="number">0x80</span>) &gt;&gt; <span class="number">3</span>): <span class="number">0000</span> <span class="number">1111</span> &amp; <span class="number">1000</span> <span class="number">0000</span> &gt;&gt;= <span class="number">0000</span> <span class="number">0000</span></span><br><span class="line">((x &amp; <span class="number">0x40</span>) &gt;&gt; <span class="number">4</span>): <span class="number">0000</span> <span class="number">1111</span> &amp; <span class="number">0100</span> <span class="number">0000</span> &gt;&gt;= <span class="number">0000</span> <span class="number">0000</span></span><br><span class="line">|: 				   <span class="number">0000</span> <span class="number">0000</span> | <span class="number">0000</span> <span class="number">0000</span></span><br><span class="line">P4 = <span class="number">0x00</span>;</span><br></pre></td></tr></table></figure>

<p>第二句:getkbd——获取键值</p>
<p>例一:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">((P4 &amp; <span class="number">0x10</span>) &lt;&lt; <span class="number">3</span>): <span class="number">0001</span> <span class="number">0100</span> &amp; <span class="number">0001</span> <span class="number">0000</span> &lt;&lt;= <span class="number">1000</span> <span class="number">0000</span> </span><br><span class="line">((P4 &amp; <span class="number">0x04</span>) &lt;&lt; <span class="number">4</span>): <span class="number">0001</span> <span class="number">0100</span> &amp; <span class="number">0000</span> <span class="number">0100</span> &lt;&lt;= <span class="number">0100</span> <span class="number">0000</span></span><br><span class="line">(P3 &amp; <span class="number">0x3f</span>): 		<span class="number">1111</span> <span class="number">0000</span> &amp; <span class="number">0011</span> <span class="number">1111</span> = <span class="number">0011</span> <span class="number">0000</span></span><br><span class="line">getkbd = <span class="number">0xf0</span>;</span><br></pre></td></tr></table></figure>

<p>例二:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">((P4 &amp; <span class="number">0x10</span>) &lt;&lt; <span class="number">3</span>): <span class="number">0000</span> <span class="number">0000</span> &amp; <span class="number">0001</span> <span class="number">0000</span> &lt;&lt;= <span class="number">1000</span> <span class="number">0000</span> </span><br><span class="line">((P4 &amp; <span class="number">0x04</span>) &lt;&lt; <span class="number">4</span>): <span class="number">0000</span> <span class="number">0000</span> &amp; <span class="number">0000</span> <span class="number">0100</span> &lt;&lt;= <span class="number">0100</span> <span class="number">0000</span></span><br><span class="line">(P3 &amp; <span class="number">0x3f</span>): 		<span class="number">0000</span> <span class="number">1111</span> &amp; <span class="number">0011</span> <span class="number">1111</span> = <span class="number">0000</span> <span class="number">1111</span></span><br><span class="line">getkbd = <span class="number">0xbf</span>;	   <span class="comment">//感觉好像怪怪的,但是自己找不出来哪里的问题,如若有错,读者自行更正</span></span><br></pre></td></tr></table></figure>
<p><code>scan_key()</code>的三行按键代码:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">scan_key</span><span class="params">()</span>			 </span><br><span class="line">&#123;</span><br><span class="line">	u8 readdata;</span><br><span class="line">	setkbd(<span class="number">0xf0</span>);    <span class="comment">//先高先低都可以,这里先高四位了.</span></span><br><span class="line">	readdata = getkbd;</span><br><span class="line">	setkbd(<span class="number">0x0f</span>);</span><br><span class="line">	readdata = (readdata | getkbd) ^ <span class="number">0xff</span>;</span><br><span class="line">	trg = readdata &amp; (readdata ^ cont);</span><br><span class="line">	cont = readdata;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>原理</strong>:通过头文件的宏定义和函数的赋值将矩阵按键的每一行,有P30,P31,P32,P33放在第四位,将矩阵按键的每一列,有P34,P35,P42,P44,放在高4位,组成一组8位数据.</p>
<p><strong>按下是1,不按是0</strong></p>
<p><strong>S7</strong>按下时为<strong>0x81</strong></p>
<table>
<thead>
<tr>
<th>P44</th>
<th>P42</th>
<th>P35</th>
<th>P34</th>
<th>P33</th>
<th>P32</th>
<th>P31</th>
<th>P30</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
</tr>
</tbody></table>
<p>同理:<strong>S16</strong>就是<strong>0x18</strong></p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项:"></a>注意事项:</h2><p>调试板子时,注意端口复用情况,可能会一个IO同时两个功能都要用到.</p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯单片机常用模块之四:ds1302模块</title>
    <url>/2023/02/11/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97(%E4%BA%8C)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="ds1302模块"><a href="#ds1302模块" class="headerlink" title="ds1302模块"></a>ds1302模块</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>DS1302芯片包含一个实时时钟&#x2F;日历和31字节的静态RAM。<br>它通过一个简单的串行接口与微处理器通信。<br>实时时钟&#x2F;日历提供秒、分钟、小时、日、日、月和年信息。<br>月末的日期会自动调整天数少于31天的月份，包括闰年的更正。时钟运行在24小时或12小时的格式与AM&#x2F;PM指示器使用同步串行通信简化了DS1302与微处理器的接口。</p>
<p>言而总之,ds1302是用来<strong>记录和处理时间</strong>的一个芯片,当题目要求方框图中提示要用<strong>ds1302</strong>或<strong>RTC时钟</strong>时就<font style=background:#FF0000><strong>必需</strong></font>使用该芯片,所以该芯片也是我们必须掌握的一个.</p>
<h2 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h2><p>在官方提供的底层代码中,我们要用其写出四个函数.</p>
<h3 id="二进制转化BCD码"><a href="#二进制转化BCD码" class="headerlink" title="二进制转化BCD码"></a>二进制转化BCD码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">u8 <span class="title function_">DEC_BCD</span><span class="params">(u8 dec)</span>             <span class="comment">//二进制转化BCD码 </span></span><br><span class="line">&#123;</span><br><span class="line">	u8 x;</span><br><span class="line">	x = dec / <span class="number">10</span>;               <span class="comment">//去前四位</span></span><br><span class="line">	x &lt;&lt;= <span class="number">4</span>;                  <span class="comment">//左移</span></span><br><span class="line">	dec %= <span class="number">10</span>;                 <span class="comment">//</span></span><br><span class="line">	dec &amp;= <span class="number">0x0f</span>;</span><br><span class="line">	<span class="keyword">return</span> (x | dec);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>举例:  12</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dec = <span class="number">12</span>;  </span><br><span class="line">x =  <span class="number">12</span> / <span class="number">10</span>;  <span class="comment">// x = 1;得到十位数的数据</span></span><br><span class="line">x &lt;&lt;= <span class="number">4</span>;  <span class="comment">//向左移四位,后四位补零</span></span><br><span class="line"><span class="number">12</span> %= <span class="number">10</span>; <span class="comment">// x = 2; 得到个位数的数据</span></span><br><span class="line">dec &amp;= <span class="number">0x0f</span>; <span class="comment">//保留后四位</span></span><br><span class="line"><span class="keyword">return</span>(<span class="number">0001</span> | <span class="number">0011</span>)</span><br><span class="line"><span class="comment">//最后输出0x12</span></span><br></pre></td></tr></table></figure>

<p>为什么这么算呢?我们是把十位和个位分开算的,0x12明明不等于12啊,等于18吧,请读者自行体会,说多了就跑题了,理解不了也没关系,先用着,慢慢学着学着就明白了.</p>
<p><strong>dec  12  0-9</strong></p>
<p><strong>bin 1100  0-1</strong></p>
<p><strong>hex   C  0-F</strong></p>
<p><strong>bcd   0x12    0x00 — 0xff</strong>	   <strong>0001 0010  0x12</strong></p>
<h3 id="BCD码转化二进制"><a href="#BCD码转化二进制" class="headerlink" title="BCD码转化二进制"></a>BCD码转化二进制</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">u8 <span class="title function_">BCD_DEC</span><span class="params">(u8 bcd)</span>              <span class="comment">//BCD码转化二进制</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 x;</span><br><span class="line">	x = bcd &gt;&gt; <span class="number">4</span>;</span><br><span class="line">	bcd &amp;= <span class="number">0x0f</span>;</span><br><span class="line">	bcd = x*<span class="number">10</span>+bcd;</span><br><span class="line">	<span class="keyword">return</span> bcd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>根据上面一个例子,这个就不难理解</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">0x12</span> &gt;&gt; <span class="number">4</span>; ==  <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">0x12</span> &amp;= <span class="number">0x0f</span>; == <span class="number">2</span></span><br><span class="line"></span><br><span class="line">bcd = <span class="number">1</span> * <span class="number">10</span> + <span class="number">2</span>; == <span class="number">12</span> </span><br></pre></td></tr></table></figure>



<h3 id="初始化模块"><a href="#初始化模块" class="headerlink" title="初始化模块"></a>初始化模块</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">init_time</span><span class="params">()</span>               <span class="comment">//单片机向ds1302数据的函数</span></span><br><span class="line">&#123;</span><br><span class="line">	sec = DEC_BCD(sec);		 		</span><br><span class="line">	min = DEC_BCD(min);</span><br><span class="line">	hour = DEC_BCD(hour);</span><br><span class="line">    <span class="comment">//因为需要用按键修改时间所有 需要变量来控制写时间 如果题目只是初始化需要改时间的话</span></span><br><span class="line">	<span class="comment">//可以直接写对应的BCD码值 就不用写 DEC_BCD()了,本函数就可从下面一行直接写起</span></span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x8e</span>,<span class="number">0x00</span>);    <span class="comment">//写允许</span></span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x80</span>,sec);</span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x82</span>,min);</span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x84</span>,hour);</span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x8e</span>,<span class="number">0x80</span>);  <span class="comment">//关</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>该函数中前三行根据题目要求是否要求修改时间,如果要修改就加上,没有就不用,写入的地址和命令都是固定的.不用理解,记住就对了.</p>
<h3 id="读取时间数据"><a href="#读取时间数据" class="headerlink" title="读取时间数据"></a>读取时间数据</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">read_ds1302</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 d;</span><br><span class="line">	d = Read_Ds1302_Byte (<span class="number">0x81</span>);</span><br><span class="line">	sec = BCD_DEC(d);</span><br><span class="line">	d = Read_Ds1302_Byte (<span class="number">0x83</span>);</span><br><span class="line">	min = BCD_DEC(d);</span><br><span class="line">	d = Read_Ds1302_Byte (<span class="number">0x85</span>);</span><br><span class="line">	hour = BCD_DEC(d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>读取的地址都是固定的.不用理解,记住就对了.</p>
<h2 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h2><h3 id="ds1302-h"><a href="#ds1302-h" class="headerlink" title="ds1302.h"></a>ds1302.h</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DS1302_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DS1302_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_Ds1302</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> temp)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_Ds1302_Byte</span><span class="params">( <span class="type">unsigned</span> <span class="type">char</span> address,<span class="type">unsigned</span> <span class="type">char</span> dat )</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">Read_Ds1302_Byte</span><span class="params">( <span class="type">unsigned</span> <span class="type">char</span> address )</span>;</span><br><span class="line"></span><br><span class="line">u8 <span class="title function_">DEC_BCD</span><span class="params">(u8 dec)</span>; </span><br><span class="line">u8 <span class="title function_">BCD_DEC</span><span class="params">(u8 bcd)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">init_time</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">read_ds1302</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<h3 id="ds1302-c"><a href="#ds1302-c" class="headerlink" title="ds1302.c"></a>ds1302.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  程序说明: DS1302驱动程序</span></span><br><span class="line"><span class="comment">  软件环境: Keil uVision 4.10 </span></span><br><span class="line"><span class="comment">  硬件环境: CT107单片机综合实训平台 8051，12MHz</span></span><br><span class="line"><span class="comment">  日    期: 2011-8-9</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"></span><br><span class="line">sbit SCK=P1^<span class="number">7</span>;		</span><br><span class="line">sbit SDA=P2^<span class="number">3</span>;		</span><br><span class="line">sbit RST = P1^<span class="number">3</span>;   <span class="comment">// DS1302复位												</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> u8 sec,min,hour;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_Ds1302</span><span class="params">(<span class="type">unsigned</span>  <span class="type">char</span> temp)</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)     	</span><br><span class="line">	&#123; </span><br><span class="line">		SCK=<span class="number">0</span>;</span><br><span class="line">		SDA=temp&amp;<span class="number">0x01</span>;</span><br><span class="line">		temp&gt;&gt;=<span class="number">1</span>; </span><br><span class="line">		SCK=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_Ds1302_Byte</span><span class="params">( <span class="type">unsigned</span> <span class="type">char</span> address,<span class="type">unsigned</span> <span class="type">char</span> dat )</span>     </span><br><span class="line">&#123;</span><br><span class="line"> 	RST=<span class="number">0</span>;	_nop_();</span><br><span class="line"> 	SCK=<span class="number">0</span>;	_nop_();</span><br><span class="line"> 	RST=<span class="number">1</span>; 	_nop_();  </span><br><span class="line"> 	Write_Ds1302(address);	</span><br><span class="line"> 	Write_Ds1302(dat);			</span><br><span class="line"> 	RST=<span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">Read_Ds1302_Byte</span> <span class="params">( <span class="type">unsigned</span> <span class="type">char</span> address )</span></span><br><span class="line">&#123;</span><br><span class="line"> 	<span class="type">unsigned</span> <span class="type">char</span> i,temp=<span class="number">0x00</span>;</span><br><span class="line"> 	RST=<span class="number">0</span>;	_nop_();</span><br><span class="line"> 	SCK=<span class="number">0</span>;	_nop_();</span><br><span class="line"> 	RST=<span class="number">1</span>;	_nop_();</span><br><span class="line"> 	Write_Ds1302(address);</span><br><span class="line"> 	<span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++) 	</span><br><span class="line"> 	&#123;		</span><br><span class="line">		SCK=<span class="number">0</span>;</span><br><span class="line">		temp&gt;&gt;=<span class="number">1</span>;	</span><br><span class="line"> 		<span class="keyword">if</span>(SDA)</span><br><span class="line"> 		temp|=<span class="number">0x80</span>;	</span><br><span class="line"> 		SCK=<span class="number">1</span>;</span><br><span class="line">	&#125; </span><br><span class="line"> 	RST=<span class="number">0</span>;	_nop_();</span><br><span class="line"> 	SCK=<span class="number">0</span>;	_nop_();</span><br><span class="line">	SCK=<span class="number">1</span>;	_nop_();</span><br><span class="line">	SDA=<span class="number">0</span>;	_nop_();</span><br><span class="line">	SDA=<span class="number">1</span>;	_nop_();</span><br><span class="line">	<span class="keyword">return</span> (temp);			</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//=============================================================//</span></span><br><span class="line"><span class="comment">//此分界线以下需要掌握,以上的代码均由官方提供</span></span><br><span class="line">u8 <span class="title function_">DEC_BCD</span><span class="params">(u8 dec)</span>             <span class="comment">//二进制转化BCD码 </span></span><br><span class="line">&#123;</span><br><span class="line">	u8 x;</span><br><span class="line">	x = dec / <span class="number">10</span>;               <span class="comment">//去前四位</span></span><br><span class="line">	x &lt;&lt;= <span class="number">4</span>;                  <span class="comment">//左移</span></span><br><span class="line">	dec %= <span class="number">10</span>;                 <span class="comment">//</span></span><br><span class="line">	dec &amp;= <span class="number">0x0f</span>;</span><br><span class="line">	<span class="keyword">return</span> (x | dec);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u8 <span class="title function_">BCD_DEC</span><span class="params">(u8 bcd)</span>              <span class="comment">//BCD码转化二进制</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 x;</span><br><span class="line">	x = bcd &gt;&gt; <span class="number">4</span>;</span><br><span class="line">	bcd &amp;= <span class="number">0x0f</span>;</span><br><span class="line">	bcd = x*<span class="number">10</span>+bcd;</span><br><span class="line">	<span class="keyword">return</span> bcd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">init_time</span><span class="params">()</span>               <span class="comment">//单片机向ds1302数据的函数</span></span><br><span class="line">&#123;</span><br><span class="line">	sec = DEC_BCD(sec);		 </span><br><span class="line"><span class="comment">//因为需要用按键修改时间所有 需要变量来控制写时间 如果题目只是初始化需要改时间的话</span></span><br><span class="line"><span class="comment">// 可以直接写对应的BCD码值 就不用写 DEC_BCD()了</span></span><br><span class="line">	min = DEC_BCD(min);</span><br><span class="line">	hour = DEC_BCD(hour);</span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x8e</span>,<span class="number">0x00</span>);    <span class="comment">//写允许</span></span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x80</span>,sec);</span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x82</span>,min);</span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x84</span>,hour);</span><br><span class="line">	Write_Ds1302_Byte(<span class="number">0x8e</span>,<span class="number">0x80</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">read_ds1302</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	u8 d;	</span><br><span class="line">	d = Read_Ds1302_Byte (<span class="number">0x81</span>);</span><br><span class="line">	sec = BCD_DEC(d);</span><br><span class="line">	d = Read_Ds1302_Byte (<span class="number">0x83</span>);</span><br><span class="line">	min = BCD_DEC(d);</span><br><span class="line">	d = Read_Ds1302_Byte (<span class="number">0x85</span>);</span><br><span class="line">	hour = BCD_DEC(d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ds1302.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned int</span></span><br><span class="line">u8 smg[] = &#123;<span class="number">0xc0</span>,<span class="number">0xf9</span>,<span class="number">0xa4</span>,<span class="number">0xb0</span>,<span class="number">0x99</span>,<span class="number">0x92</span>,<span class="number">0x82</span>,<span class="number">0xf8</span>,<span class="number">0x80</span>,<span class="number">0x90</span>&#125;;</span><br><span class="line"></span><br><span class="line">u8 cp,flash,sec = <span class="number">50</span>,min = <span class="number">59</span>,hour = <span class="number">23</span>,n;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">INIT</span><span class="params">(u8 n,u8 value)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">switch</span>(n)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">4</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x80</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">5</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xa0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">6</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">7</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;	 </span><br><span class="line">	 INIT(<span class="number">7</span>,<span class="number">0xff</span>);</span><br><span class="line">	 <span class="keyword">switch</span>(n)</span><br><span class="line">	 &#123;</span><br><span class="line">	 	<span class="keyword">case</span> <span class="number">0</span>:INIT(<span class="number">6</span>,<span class="number">0x80</span>);INIT(<span class="number">7</span>,smg[sec % <span class="number">10</span>]);<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:INIT(<span class="number">6</span>,<span class="number">0x40</span>);INIT(<span class="number">7</span>,smg[sec / <span class="number">10</span>]);<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:INIT(<span class="number">6</span>,<span class="number">0x20</span>);INIT(<span class="number">7</span>,<span class="number">0xbf</span>);<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">3</span>:INIT(<span class="number">6</span>,<span class="number">0x10</span>);INIT(<span class="number">7</span>,smg[min / <span class="number">10</span>]);<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:INIT(<span class="number">6</span>,<span class="number">0x08</span>);INIT(<span class="number">7</span>,smg[min / <span class="number">10</span>]);<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">5</span>:INIT(<span class="number">6</span>,<span class="number">0x04</span>);INIT(<span class="number">7</span>,<span class="number">0xbf</span>);<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">6</span>:INIT(<span class="number">6</span>,<span class="number">0x02</span>);INIT(<span class="number">7</span>,smg[hour / <span class="number">10</span>]);<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">7</span>:INIT(<span class="number">6</span>,<span class="number">0x01</span>);INIT(<span class="number">7</span>,smg[hour / <span class="number">10</span>]);<span class="keyword">break</span>;</span><br><span class="line">	 &#125;</span><br><span class="line">	 n++;<span class="keyword">if</span>(n &gt;= <span class="number">8</span>)n = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">timer0_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	TMOD = <span class="number">0x01</span>;</span><br><span class="line">	TH0 = (<span class="number">65536</span> - <span class="number">2000</span>) / <span class="number">256</span>;</span><br><span class="line">	TL0 = (<span class="number">65536</span> - <span class="number">2000</span>) % <span class="number">256</span>;</span><br><span class="line">	ET0 = <span class="number">1</span>;</span><br><span class="line">	EA = <span class="number">1</span>;</span><br><span class="line">	TR0 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">timer0_isr</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">	TH0 = (<span class="number">65536</span> - <span class="number">2000</span>) / <span class="number">256</span>;</span><br><span class="line">	TL0 = (<span class="number">65536</span> - <span class="number">2000</span>) % <span class="number">256</span>;</span><br><span class="line">	cp++;<span class="keyword">if</span>(cp &gt;= <span class="number">250</span>)&#123;cp = <span class="number">0</span>;flash = ~flash;&#125;	  <span class="comment">//半秒</span></span><br><span class="line">	display();	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//只看初始化函数和读取函数放在主函数的那个位置就行,</span></span><br><span class="line"><span class="comment">//数码管的写法不必参考,此方法不如数组好用,写着还麻烦</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	INIT(<span class="number">5</span>,<span class="number">0x00</span>);</span><br><span class="line">	INIT(<span class="number">4</span>,<span class="number">0xff</span>);</span><br><span class="line">	timer0_init();</span><br><span class="line">	init_time();</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	 read_ds1302();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>部分参考:</p>
<p><a href="https://blog.csdn.net/tuygre/article/details/123080975">(5条消息) 蓝桥杯单片机模块代码（DS1302时钟芯片）(代码+注释)_ds1302代码_tuygre的博客-CSDN博客</a></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯单片机常用模块之五:iic通信</title>
    <url>/2023/02/25/%E5%8D%95%E7%89%87%E6%9C%BA%E8%93%9D%E6%A1%A5%E6%9D%AF(%E4%BA%94)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="单片机蓝桥杯-五-IIC通信之AT24C02-amp-PCF8591"><a href="#单片机蓝桥杯-五-IIC通信之AT24C02-amp-PCF8591" class="headerlink" title="单片机蓝桥杯(五):IIC通信之AT24C02&amp;PCF8591"></a>单片机蓝桥杯(五):IIC通信之AT24C02&amp;PCF8591</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本篇是关于单片机协会蓝桥杯比赛的文章的最后一篇! 看完本篇相信各位(<del>同志</del>)同学已经初步了解蓝桥杯单片机程序的编写和单片机的硬件原理.可以开始进行真题的练习了噢!相信自己可以的!蓝桥杯省赛的难度并不大.只要按学长给的建议认真准备都可以成功拿奖的喔.</p>
<h2 id="IIC通信"><a href="#IIC通信" class="headerlink" title="IIC通信"></a>IIC通信</h2><p>  <strong>IIC(Inter－Integrated Circuit)总线</strong>是一种由NXP（原PHILIPS）公司开发的两线式串行总线，用于连接微控制器及其外围设备。多用于主控制器和从器件间的主从通信，在小数据量场合使用，传输距离短，任意时刻只能有一个主机等特性。</p>
<p><strong>IIC通信</strong>过程由开始、结束、发送、响应、接收五个部分构成。</p>
<p> 1 、（在发送、接收数据的时候）当SCL为高电平时，SDA线不允许变化；当SCL线为低电平时，SDA线可以任意0、1变化。</p>
<p> 2、（在任意时候）只有当SCL为高电平时，IIC电路才对SDA线上的电平（0或者1）进行记录，当SCL线为低电平时，无论SDA是高还是低，IIC电路都不对SDA进行采样。</p>
<p><strong>IIC是半双工，而不是全双工</strong> ，同一时间只可以单向通信.</p>
<p>我就不<strong>滥竽充数</strong>了,详情看下面专业大佬的解读:</p>
<p><a href="https://blog.csdn.net/as480133937/article/details/105366932"> IIC原理超详细讲解iic</a></p>
<h2 id="ATC4C02模块"><a href="#ATC4C02模块" class="headerlink" title="ATC4C02模块"></a>ATC4C02模块</h2><p>AT24C02提供2048位的电可擦和可编程只读<strong>存储器</strong>(EEPROM).组织为256， 8位字。</p>
<p>内部组织32页，每个8字节2K需要8位数据字地址用于随机字寻址也就是说有32页，每一页8Byte，每1Byte是8位，总共就是2Kbit的存储空间.</p>
<p>AT24C02可以进行<strong>单字节</strong>的读写操作,也可进行<strong>连续多页</strong>的读写.这里只介绍<strong>单字节的读写</strong>原理.多字节的自行百度,或查看芯片手册.省级比赛一般用不上连续读写.</p>
<h3 id="字节写"><a href="#字节写" class="headerlink" title="字节写:"></a>字节写:</h3><p>操作需要在设备地址字和确认之后有一个8位的数据字地址。一旦收到这个地址，EEPROM将再次响应一个零，然后在第一个8位数据字时钟。接收到8位数据字后，EEPROM将输出一个零。主机必须用一个停止条件终止写序列。此时，EEPROM进入一个内部计时的写周期，到非易失性存储器。在这个写周期中，所有输入都被禁用，EEPROM直到写完成才会响应。</p>
<p><img src="https://img-blog.csdnimg.cn/20210330105252750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3NDI5MzEz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="当前地址读取"><a href="#当前地址读取" class="headerlink" title="当前地址读取:"></a>当前地址读取:</h3><p>内部数据字地址计数器维护上次读或写操作期间访问的最后一个地址，该地址加1。这个地址在操作之间保持有效，只要芯片电源是保持的。读取期间的地址“翻转”是从最后一个内存页的最后一个字节到第一个页的第一个字节。写过程中的地址“翻转”是从当前页的最后一个字节到同一页的第一个字节一旦具有读&#x2F;写选择位设置为1的设备地址被打卡并被EEPROM确认。</p>
<p><img src="https://img-blog.csdnimg.cn/20210330105307507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3NDI5MzEz,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p>
<p>详情:<a href="https://blog.csdn.net/qq_37429313/article/details/115317374"> AT24C02详解(蓝桥杯单片机模块(IIC总线))</a></p>
<h3 id="蓝桥杯代码"><a href="#蓝桥杯代码" class="headerlink" title="蓝桥杯代码:"></a>蓝桥杯代码:</h3><p><strong>iic.h</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _IIC_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _IIC_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_byte_at24c02</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> adrr, <span class="type">unsigned</span> <span class="type">char</span> dat)</span>; </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">read_byte_at24c02</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> adrr)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">write_nbyte_at24c02</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> adrr, <span class="type">unsigned</span> <span class="type">char</span> *dat,<span class="type">unsigned</span> <span class="type">char</span> lenth)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">read_nbyte_at24c02</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> adrr, <span class="type">unsigned</span> <span class="type">char</span> *dat,<span class="type">unsigned</span> <span class="type">char</span> lenth)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p><strong>iic.c</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  程序说明: IIC总线驱动程序</span></span><br><span class="line"><span class="comment">  软件环境: Keil uVision 4.10 </span></span><br><span class="line"><span class="comment">  硬件环境: CT107单片机综合实训平台 8051，12MHz</span></span><br><span class="line"><span class="comment">  日    期: 2011-8-9</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;intrins.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DELAY_TIME 5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SlaveAddrW 0xA0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SlaveAddrR 0xA1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//总线引脚定义</span></span><br><span class="line">sbit SDA = P2^<span class="number">1</span>;  <span class="comment">/* 数据线 */</span></span><br><span class="line">sbit SCL = P2^<span class="number">0</span>;  <span class="comment">/* 时钟线 */</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">do</span>&#123;_nop_();&#125;</span><br><span class="line">    <span class="keyword">while</span>(i--);        </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//总线启动条件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Start</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SDA = <span class="number">1</span>;</span><br><span class="line">    SCL = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SDA = <span class="number">0</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SCL = <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//总线停止条件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Stop</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SDA = <span class="number">0</span>;</span><br><span class="line">    SCL = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SDA = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送应答</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_SendAck</span><span class="params">(bit ackbit)</span></span><br><span class="line">&#123;</span><br><span class="line">    SCL = <span class="number">0</span>;</span><br><span class="line">    SDA = ackbit;  					<span class="comment">// 0：应答，1：非应答</span></span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SCL = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SCL = <span class="number">0</span>; </span><br><span class="line">    SDA = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//等待应答</span></span><br><span class="line">bit <span class="title function_">IIC_WaitAck</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    bit ackbit;</span><br><span class="line">	</span><br><span class="line">    SCL  = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    ackbit = SDA;</span><br><span class="line">    SCL = <span class="number">0</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    <span class="keyword">return</span> ackbit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过I2C总线发送数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> byt)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        SCL  = <span class="number">0</span>;</span><br><span class="line">        IIC_Delay(DELAY_TIME);</span><br><span class="line">        <span class="keyword">if</span>(byt &amp; <span class="number">0x80</span>) SDA  = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> SDA  = <span class="number">0</span>;</span><br><span class="line">        IIC_Delay(DELAY_TIME);</span><br><span class="line">        SCL = <span class="number">1</span>;</span><br><span class="line">        byt &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        IIC_Delay(DELAY_TIME);</span><br><span class="line">    &#125;</span><br><span class="line">    SCL  = <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从I2C总线上接收数据</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">IIC_RecByte</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, da;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">    &#123;   </span><br><span class="line">    	SCL = <span class="number">1</span>;</span><br><span class="line">	IIC_Delay(DELAY_TIME);</span><br><span class="line">	da &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(SDA) da |= <span class="number">1</span>;</span><br><span class="line">	SCL = <span class="number">0</span>;</span><br><span class="line">	IIC_Delay(DELAY_TIME);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> da;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=============单字节写入=================//</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_byte_at24c02</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> adrr, <span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0xA0</span>);		<span class="comment">//写入a0，读取a1</span></span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	IIC_SendByte(adrr);</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	IIC_SendByte(dat);</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	IIC_Stop(); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=============单字节读取=================//</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">read_byte_at24c02</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> adrr)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> temp;</span><br><span class="line"></span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0xA0</span>);		<span class="comment">//写入a0，读取a1</span></span><br><span class="line">	IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">	IIC_SendByte(adrr);</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0xA1</span>);		<span class="comment">//写入a0，读取a1</span></span><br><span class="line">	IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">	temp = IIC_RecByte();</span><br><span class="line"></span><br><span class="line">	IIC_Stop();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以下代码省赛不要求掌握,学过指针的同学可以了解以下</span></span><br><span class="line"><span class="comment">//=============多字节写入=================//</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_nbyte_at24c02</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> adrr, <span class="type">unsigned</span> <span class="type">char</span> *dat,<span class="type">unsigned</span> <span class="type">char</span> lenth)</span></span><br><span class="line">&#123;</span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0xA0</span>);		<span class="comment">//写入a0，读取a1</span></span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	IIC_SendByte(adrr);</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(lenth--)</span><br><span class="line">	&#123;		</span><br><span class="line">	IIC_SendByte(*dat);</span><br><span class="line">	IIC_WaitAck();	</span><br><span class="line">	dat++;</span><br><span class="line">	&#125;	</span><br><span class="line">		</span><br><span class="line">	IIC_Stop(); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=============多字节读取================//</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">read_nbyte_at24c02</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> adrr, <span class="type">unsigned</span> <span class="type">char</span> *dat,<span class="type">unsigned</span> <span class="type">char</span> lenth)</span></span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0xA0</span>);		<span class="comment">//写入a0，读取a1</span></span><br><span class="line">	IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">	IIC_SendByte(adrr);</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0xA1</span>);		<span class="comment">//写入a0，读取a1</span></span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(--lenth)</span><br><span class="line">	&#123;</span><br><span class="line">		*dat = IIC_RecByte();</span><br><span class="line">		IIC_SendAck(<span class="number">0</span>); <span class="comment">//  拉低</span></span><br><span class="line">		dat++;</span><br><span class="line">	&#125;	</span><br><span class="line"></span><br><span class="line">	 *dat = IIC_RecByte();</span><br><span class="line"></span><br><span class="line">	IIC_Stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>main.c</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> code smg_duanma[<span class="number">18</span>] = &#123;<span class="number">0xc0</span>,<span class="number">0xf9</span>,<span class="number">0xa4</span>,<span class="number">0xb0</span>,<span class="number">0x99</span>,<span class="number">0x92</span>,<span class="number">0x82</span>,<span class="number">0xf8</span>,<span class="number">0x80</span>,<span class="number">0x90</span>, <span class="comment">//0-9</span></span><br><span class="line">                          <span class="number">0x88</span>,<span class="number">0x80</span>,<span class="number">0xc6</span>,<span class="number">0xc0</span>,<span class="number">0x86</span>,<span class="number">0x8e</span>,					 <span class="comment">//A-F</span></span><br><span class="line">                          <span class="number">0xbf</span>,<span class="number">0x7f</span>&#125;;									  <span class="comment">//-,.</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> smg_we[] = &#123;<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x80</span>&#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> smg_table[<span class="number">8</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> smg_dat[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Init</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span>(ms--)</span><br><span class="line">	&#123;</span><br><span class="line">		Delay1ms();	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">INIT1</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> n,<span class="type">unsigned</span> <span class="type">char</span> value)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">switch</span>(n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x80</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">5</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xa0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">6</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">7</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">static</span> <span class="type">unsigned</span> <span class="type">char</span> i;	                     <span class="comment">//设为静态变量下次调用值不变</span></span><br><span class="line">	</span><br><span class="line">	INIT1(<span class="number">6</span>,smg_we[i]);   	<span class="comment">//先位选</span></span><br><span class="line">	INIT1(<span class="number">7</span>,smg_table[i]);	<span class="comment">//段码</span></span><br><span class="line">	i++;</span><br><span class="line">	<span class="keyword">if</span>(i &gt;= <span class="number">8</span>)i = <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">timer0_isr</span><span class="params">()</span> interrupt 1	</span><br><span class="line">&#123;</span><br><span class="line">	 display();	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//============单字节==========//</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> temp_24c02;</span><br><span class="line">	Timer0Init();</span><br><span class="line">	INIT1(<span class="number">5</span>,<span class="number">0x00</span>);</span><br><span class="line">	INIT1(<span class="number">4</span>,<span class="number">0xff</span>);</span><br><span class="line">		</span><br><span class="line">	write_byte_at24c02(<span class="number">0x55</span>,<span class="number">0xA3</span>);</span><br><span class="line">	delay_ms(<span class="number">10</span>);				           <span class="comment">//延时不能低于5ms</span></span><br><span class="line">	temp_24c02 = read_byte_at24c02(<span class="number">0x55</span>);</span><br><span class="line">	smg_table[<span class="number">0</span>] = smg_duanma[temp_24c02 / <span class="number">0x10</span>];			   </span><br><span class="line">	smg_table[<span class="number">1</span>] = smg_duanma[temp_24c02 % <span class="number">0x10</span>];</span><br><span class="line">	smg_table[<span class="number">2</span>] = <span class="number">0xff</span>;</span><br><span class="line">	smg_table[<span class="number">3</span>] = <span class="number">0xff</span>;</span><br><span class="line">	smg_table[<span class="number">4</span>] = <span class="number">0xff</span>;</span><br><span class="line">	smg_table[<span class="number">5</span>] = <span class="number">0xff</span>;</span><br><span class="line">	smg_table[<span class="number">6</span>] = <span class="number">0xff</span>;</span><br><span class="line">	smg_table[<span class="number">7</span>] = <span class="number">0xff</span>;	</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>);	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//想看看多字节的烧录效果的可以把上面的主函数注释掉,下面的主函数取消注释</span></span><br><span class="line"><span class="comment">//============多字节==========//</span></span><br><span class="line"><span class="comment">//void main()</span></span><br><span class="line"><span class="comment">//&#123;	</span></span><br><span class="line"><span class="comment">//	unsigned char temp_24c02[8] = &#123;2,0,2,2,0,3,0,1&#125;; //日期</span></span><br><span class="line"><span class="comment">//	Timer0Init();</span></span><br><span class="line"><span class="comment">//	INIT1(5,0x00);</span></span><br><span class="line"><span class="comment">//	INIT1(4,0xff);</span></span><br><span class="line"><span class="comment">// 	INIT1(7,0xff);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//	write_nbyte_at24c02(0x55,temp_24c02,8);</span></span><br><span class="line"><span class="comment">//	delay_ms(10);				           //延时不能低于5ms</span></span><br><span class="line"><span class="comment">//	read_nbyte_at24c02(0x55,smg_dat,8);</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//	smg_table[0] = smg_duanma[smg_dat[0]];</span></span><br><span class="line"><span class="comment">//	smg_table[1] = smg_duanma[smg_dat[1]];</span></span><br><span class="line"><span class="comment">//	smg_table[2] = smg_duanma[smg_dat[2]];</span></span><br><span class="line"><span class="comment">//	smg_table[3] = smg_duanma[smg_dat[3]];</span></span><br><span class="line"><span class="comment">//	smg_table[4] = smg_duanma[smg_dat[4]];</span></span><br><span class="line"><span class="comment">//	smg_table[5] = smg_duanma[smg_dat[5]];</span></span><br><span class="line"><span class="comment">//	smg_table[6] = smg_duanma[smg_dat[6]];</span></span><br><span class="line"><span class="comment">//	smg_table[7] = smg_duanma[smg_dat[7]];		</span></span><br><span class="line"><span class="comment">//	while(1);	</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1ms</span><span class="params">()</span>		<span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"></span><br><span class="line">	i = <span class="number">12</span>;</span><br><span class="line">	j = <span class="number">169</span>;</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span> (--j);</span><br><span class="line">	&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Init</span><span class="params">()</span>		<span class="comment">//2毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">	AUXR |= <span class="number">0x80</span>;		<span class="comment">//定时器时钟1T模式</span></span><br><span class="line">	TMOD &amp;= <span class="number">0xF0</span>;		<span class="comment">//设置定时器模式</span></span><br><span class="line">	TL0 = <span class="number">0x40</span>;		<span class="comment">//设置定时初始值</span></span><br><span class="line">	TH0 = <span class="number">0xA2</span>;		<span class="comment">//设置定时初始值</span></span><br><span class="line">	TF0 = <span class="number">0</span>;		<span class="comment">//清除TF0标志</span></span><br><span class="line">	TR0 = <span class="number">1</span>;		<span class="comment">//定时器0开始计时</span></span><br><span class="line"> 	 	</span><br><span class="line">	ET0 = <span class="number">1</span>;</span><br><span class="line">	EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="PCF8591模块"><a href="#PCF8591模块" class="headerlink" title="PCF8591模块"></a>PCF8591模块</h2><p>PCF8591是一个单片集成、单独供电、低功耗、8-bit CMOS数据获取器件。PCF8591具有4个模拟输入、1个模拟输出和1个串行I²C总线接口。PCF8591的3个地址引脚A0, A1和A2可用于硬件地址编程，允许在同个I2C总线上接入8个PCF8591器件，而无需额外的硬件。在PCF8591器件上输入输出的地址、控制和数据信号都是通过双线双向I2C总线以串行的方式进行传输。<br><img src="https://img-blog.csdnimg.cn/3c4aded0bee0459b939bf5ca3c5a965f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5Y-v54ix55qE55qu5ZKU5ZKY,size_12,color_FFFFFF,t_70,g_se,x_16" alt="img"></p>
<p>四个通道(常考1,3通道,0通道也会考但是要备一个万用表.考试一般考场会提供,但是这几年疫情都是线上,考得少.)</p>
<p><code>AIN0</code>：接到右边排针上，可以用杜邦线连外部模拟电压信号<br><code>AIN1</code>：接到光敏电阻上<br><code>AIN2</code>：放大器的输出端<br><code>AIN3</code>：接到滑动变阻器Rb2上   </p>
<p>在i2c总线系统中的每个PCF8591设备通过发送一个有效的地址来激活。该地址由一个固定部分和一个可编程部分组成。可编程部分必须根据地址引脚A0、A1和A2进行设置。由原理图知A0、A1和A2都接地。在I2c总线协议中，该地址总是必须作为启动条件后的第一个字节发送。地址字节的最后一位是读&#x2F;写位，它设置了以下数据传输的方向。写地址为:<strong>0x90</strong>      读地址为:<strong>0x91</strong><br>原理不多赘述,与at24c02一样<strong>我们只需要记住读和写的字节就行</strong>,当然可以查阅芯片手册了解具体原理.</p>
<h3 id="蓝桥杯代码-1"><a href="#蓝桥杯代码-1" class="headerlink" title="蓝桥杯代码:"></a>蓝桥杯代码:</h3><p><strong>iic.h</strong>	</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _IIC_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _IIC_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Start</span><span class="params">(<span class="type">void</span>)</span>; </span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Stop</span><span class="params">(<span class="type">void</span>)</span>;  </span><br><span class="line">bit <span class="title function_">IIC_WaitAck</span><span class="params">(<span class="type">void</span>)</span>;  </span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_SendAck</span><span class="params">(bit ackbit)</span>; </span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> byt)</span>; </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">IIC_RecByte</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">write_8591</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dac)</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">read_8591_channel</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> channel_n)</span>;</span><br><span class="line"><span class="comment">//unsigned int read_8591(unsigned char dac); </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p><strong>iic.c</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  程序说明: IIC总线驱动程序</span></span><br><span class="line"><span class="comment">  软件环境: Keil uVision 4.10 </span></span><br><span class="line"><span class="comment">  硬件环境: CT107单片机综合实训平台 8051，12MHz</span></span><br><span class="line"><span class="comment">  日    期: 2011-8-9</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;intrins.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DELAY_TIME 5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SlaveAddrW 0xA0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SlaveAddrR 0xA1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//总线引脚定义</span></span><br><span class="line">sbit SDA = P2^<span class="number">1</span>;  <span class="comment">/* 数据线 */</span></span><br><span class="line">sbit SCL = P2^<span class="number">0</span>;  <span class="comment">/* 时钟线 */</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">do</span>&#123;_nop_();&#125;</span><br><span class="line">    <span class="keyword">while</span>(i--);        </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//总线启动条件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Start</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SDA = <span class="number">1</span>;</span><br><span class="line">    SCL = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SDA = <span class="number">0</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SCL = <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//总线停止条件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Stop</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SDA = <span class="number">0</span>;</span><br><span class="line">    SCL = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SDA = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送应答</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_SendAck</span><span class="params">(bit ackbit)</span></span><br><span class="line">&#123;</span><br><span class="line">    SCL = <span class="number">0</span>;</span><br><span class="line">    SDA = ackbit;  					<span class="comment">// 0：应答，1：非应答</span></span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SCL = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    SCL = <span class="number">0</span>; </span><br><span class="line">    SDA = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//等待应答</span></span><br><span class="line">bit <span class="title function_">IIC_WaitAck</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    bit ackbit;</span><br><span class="line">	</span><br><span class="line">    SCL  = <span class="number">1</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    ackbit = SDA;</span><br><span class="line">    SCL = <span class="number">0</span>;</span><br><span class="line">    IIC_Delay(DELAY_TIME);</span><br><span class="line">    <span class="keyword">return</span> ackbit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过I2C总线发送数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> byt)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        SCL  = <span class="number">0</span>;</span><br><span class="line">        IIC_Delay(DELAY_TIME);</span><br><span class="line">        <span class="keyword">if</span>(byt &amp; <span class="number">0x80</span>) SDA  = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> SDA  = <span class="number">0</span>;</span><br><span class="line">        IIC_Delay(DELAY_TIME);</span><br><span class="line">        SCL = <span class="number">1</span>;</span><br><span class="line">        byt &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        IIC_Delay(DELAY_TIME);</span><br><span class="line">    &#125;</span><br><span class="line">    SCL  = <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从I2C总线上接收数据</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">IIC_RecByte</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, da;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">    &#123;   </span><br><span class="line">    	SCL = <span class="number">1</span>;</span><br><span class="line">	IIC_Delay(DELAY_TIME);</span><br><span class="line">	da &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(SDA) da |= <span class="number">1</span>;</span><br><span class="line">	SCL = <span class="number">0</span>;</span><br><span class="line">	IIC_Delay(DELAY_TIME);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> da;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=======================PCF8591===========================//</span></span><br><span class="line"><span class="comment">/*channel_n只能填0、1、2、3</span></span><br><span class="line"><span class="comment"> *分别对应通道0、1、2、3</span></span><br><span class="line"><span class="comment"> *对应2进制也刚好和CONTRL BYTE发送给8591的最后两位一样</span></span><br><span class="line"><span class="comment"> *而因为不需要自动递增</span></span><br><span class="line"><span class="comment"> *则可以直接作为CONTRL BYTE发送给8591</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_8591</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dac)</span>   <span class="comment">//写入电压值</span></span><br><span class="line">&#123;</span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0x90</span>);		<span class="comment">//写入90，读取a1</span></span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	IIC_SendByte(<span class="number">0x40</span>);</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	IIC_SendByte(dac);</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line">	</span><br><span class="line">	IIC_Stop(); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">read_8591_channel</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> channel_n)</span>	   <span class="comment">//读电压</span></span><br><span class="line">&#123;</span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0x90</span>);		</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">	IIC_SendByte(channel_n);		<span class="comment">//channel_n只能填0、1、2、3</span></span><br><span class="line">	IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">	IIC_Start();</span><br><span class="line">	IIC_SendByte(<span class="number">0x91</span>);		</span><br><span class="line">	IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">	channel_n = IIC_RecByte();		   <span class="comment">//每次读到的都是上次转化的结果，读两次，</span></span><br><span class="line">	IIC_SendAck(<span class="number">0</span>);</span><br><span class="line">	channel_n = IIC_RecByte();</span><br><span class="line"></span><br><span class="line">	IIC_Stop();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> channel_n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//unsigned int read_8591(unsigned char dac)   //读取电压值、、一次读完4个</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//	unsigned char channel_1,channel_3;</span></span><br><span class="line"><span class="comment">//	IIC_Start();</span></span><br><span class="line"><span class="comment">//	IIC_SendByte(0x90);		</span></span><br><span class="line"><span class="comment">//	IIC_WaitAck();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//	IIC_SendByte(0x04);</span></span><br><span class="line"><span class="comment">//	IIC_WaitAck();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//	IIC_Start();</span></span><br><span class="line"><span class="comment">//	IIC_SendByte(0x91);		</span></span><br><span class="line"><span class="comment">//	IIC_WaitAck();</span></span><br><span class="line"><span class="comment">//	</span></span><br><span class="line"><span class="comment">//	channel_1 = IIC_RecByte();</span></span><br><span class="line"><span class="comment">//	IIC_SendAck(0);</span></span><br><span class="line"><span class="comment">//	</span></span><br><span class="line"><span class="comment">//	IIC_RecByte();           //channel_2不常用，但要读，不用保存</span></span><br><span class="line"><span class="comment">//	IIC_SendAck(0);</span></span><br><span class="line"><span class="comment">//	</span></span><br><span class="line"><span class="comment">//	channel_3 = IIC_RecByte();</span></span><br><span class="line"><span class="comment">//	IIC_SendAck(0);</span></span><br><span class="line"><span class="comment">//	</span></span><br><span class="line"><span class="comment">//	IIC_RecByte();               //4同2，且不用回应</span></span><br><span class="line"><span class="comment">//		</span></span><br><span class="line"><span class="comment">//	IIC_Stop();</span></span><br><span class="line"><span class="comment">//	return channel_1 &lt;&lt; 8 | channel_3;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>mian.c</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned int</span></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>;</span><br><span class="line"></span><br><span class="line">u8 code smg_duan[] = &#123;<span class="number">0xc0</span>,<span class="number">0xf9</span>,<span class="number">0xa4</span>,<span class="number">0xb0</span>,<span class="number">0x99</span>,<span class="number">0x92</span>,<span class="number">0x82</span>,<span class="number">0xf8</span>,<span class="number">0x80</span>,<span class="number">0x90</span>,</span><br><span class="line">					  <span class="number">0x88</span>,<span class="number">0x80</span>,<span class="number">0xc6</span>,<span class="number">0xc0</span>,<span class="number">0x86</span>,<span class="number">0x8e</span>,					 <span class="comment">//A-F</span></span><br><span class="line">                      <span class="number">0xbf</span>,<span class="number">0x7f</span>&#125;;		</span><br><span class="line">u8 smg_we[<span class="number">8</span>] = &#123;<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x80</span>&#125;;</span><br><span class="line">u8 table[<span class="number">8</span>];</span><br><span class="line">u8 smg_dat[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line">u16 temp_8951;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1ms</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delayms</span><span class="params">(u16 ms)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span>(ms--)</span><br><span class="line">	&#123;</span><br><span class="line">	 Delay1ms();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">INIT1</span><span class="params">(u8 n,u8 value)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">switch</span>(n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x80</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">5</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xa0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">6</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">7</span>: P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>; P0 = value; P2 &amp;= <span class="number">0x1f</span>; <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> 	<span class="type">static</span> u8 i;			   <span class="comment">//设为静态变量下次调用值不变</span></span><br><span class="line"> 	INIT1(<span class="number">7</span>,<span class="number">0xff</span>);	         <span class="comment">//消隐          </span></span><br><span class="line">	INIT1(<span class="number">6</span>,smg_we[i]);   	<span class="comment">//先位选</span></span><br><span class="line">	INIT1(<span class="number">7</span>,table[i]);	<span class="comment">//段码</span></span><br><span class="line">	i++;</span><br><span class="line">	<span class="keyword">if</span>(i &gt;= <span class="number">8</span>)i = <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SMGtable</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	table[<span class="number">0</span>] = smg_duan[smg_dat[<span class="number">0</span>]];</span><br><span class="line">	table[<span class="number">1</span>] = smg_duan[smg_dat[<span class="number">1</span>]];	</span><br><span class="line">	table[<span class="number">2</span>] = <span class="number">0xff</span>;<span class="comment">//smg_duan[smg_dat[2]];	</span></span><br><span class="line">	table[<span class="number">3</span>] = <span class="number">0xff</span>;<span class="comment">//smg_duan[smg_dat[3]];	</span></span><br><span class="line">	table[<span class="number">4</span>] = smg_duan[smg_dat[<span class="number">4</span>]];	</span><br><span class="line">	table[<span class="number">5</span>] = smg_duan[smg_dat[<span class="number">5</span>]];	</span><br><span class="line">	table[<span class="number">6</span>] = <span class="number">0xff</span>;<span class="comment">//smg_duan[smg_dat[6]];	</span></span><br><span class="line">	table[<span class="number">7</span>] = <span class="number">0xff</span>;<span class="comment">//smg_duan[smg_dat[7]];		</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Isr</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">	 display();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//void main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//	INIT1(5,0x00);</span></span><br><span class="line"><span class="comment">//	INIT1(4,0xff);</span></span><br><span class="line"><span class="comment">//	Timer0Init();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//	write_8591(127);                  //0-255</span></span><br><span class="line"><span class="comment">//	</span></span><br><span class="line"><span class="comment">//	while(1)</span></span><br><span class="line"><span class="comment">//	&#123;</span></span><br><span class="line"><span class="comment">//	 SMGtable();</span></span><br><span class="line"><span class="comment">//	 temp_8951 = read_8591();</span></span><br><span class="line"><span class="comment">//	 smg_dat[0] = temp_8951 / 0x1000;</span></span><br><span class="line"><span class="comment">//	 smg_dat[1] = temp_8951 / 0x100 % 0x10;</span></span><br><span class="line"><span class="comment">//	 smg_dat[4] = temp_8951 / 0x10 % 0x10;</span></span><br><span class="line"><span class="comment">//	 smg_dat[5] = temp_8951 % 0x10;</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	INIT1(<span class="number">5</span>,<span class="number">0x00</span>);</span><br><span class="line">	INIT1(<span class="number">4</span>,<span class="number">0xff</span>);</span><br><span class="line">	Timer0Init();</span><br><span class="line"></span><br><span class="line">	write_8591(<span class="number">127</span>);                  <span class="comment">//0-255	</span></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	</span><br><span class="line">	 SMGtable();</span><br><span class="line">	 temp_8951 = read_8591_channel(<span class="number">1</span>);	  <span class="comment">//读第一个通道</span></span><br><span class="line">	 temp_8951 &lt;&lt;= <span class="number">8</span>;			    <span class="comment">//左移8位</span></span><br><span class="line">	 Delayms(<span class="number">10</span>);</span><br><span class="line">	 temp_8951 |= read_8591_channel(<span class="number">3</span>);	     <span class="comment">//读第三个通道</span></span><br><span class="line">	 	  	 	</span><br><span class="line">	 smg_dat[<span class="number">0</span>] = temp_8951 / <span class="number">0x1000</span>;</span><br><span class="line">	 smg_dat[<span class="number">1</span>] = temp_8951 / <span class="number">0x100</span> % <span class="number">0x10</span>;</span><br><span class="line">	 smg_dat[<span class="number">4</span>] = temp_8951 / <span class="number">0x10</span> % <span class="number">0x10</span>;</span><br><span class="line">	 smg_dat[<span class="number">5</span>] = temp_8951 % <span class="number">0x10</span>;</span><br><span class="line">	&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Init</span><span class="params">(<span class="type">void</span>)</span>		<span class="comment">//2毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">	AUXR |= <span class="number">0x80</span>;		<span class="comment">//定时器时钟1T模式</span></span><br><span class="line">	TMOD &amp;= <span class="number">0xF0</span>;		<span class="comment">//设置定时器模式</span></span><br><span class="line">	TL0 = <span class="number">0x40</span>;		<span class="comment">//设置定时初始值</span></span><br><span class="line">	TH0 = <span class="number">0xA2</span>;		<span class="comment">//设置定时初始值</span></span><br><span class="line">	TF0 = <span class="number">0</span>;		<span class="comment">//清除TF0标志</span></span><br><span class="line">	TR0 = <span class="number">1</span>;		<span class="comment">//定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">	ET0 = <span class="number">1</span>;</span><br><span class="line">	EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1ms</span><span class="params">()</span>		<span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"></span><br><span class="line">	i = <span class="number">12</span>;</span><br><span class="line">	j = <span class="number">169</span>;</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span> (--j);</span><br><span class="line">	&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
</search>
